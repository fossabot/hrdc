from usage import *

Sensor = Usage("sensors.Sensor", 0x200001, CA, CP)
Biometric = Usage("sensors.Biometric", 0x200010, CA, CP)
BiometricHumanPresence = Usage("sensors.BiometricHumanPresence", 0x200011, CA, CP)
BiometricHumanProximity = Usage("sensors.BiometricHumanProximity", 0x200012, CA, CP)
BiometricHumanTouch = Usage("sensors.BiometricHumanTouch", 0x200013, CA, CP)
Electrical = Usage("sensors.Electrical", 0x200020, CA, CP)
ElectricalCapacitance = Usage("sensors.ElectricalCapacitance", 0x200021, CA, CP)
ElectricalCurrent = Usage("sensors.ElectricalCurrent", 0x200022, CA, CP)
ElectricalPower = Usage("sensors.ElectricalPower", 0x200023, CA, CP)
ElectricalInductance = Usage("sensors.ElectricalInductance", 0x200024, CA, CP)
ElectricalResistance = Usage("sensors.ElectricalResistance", 0x200025, CA, CP)
ElectricalVoltage = Usage("sensors.ElectricalVoltage", 0x200026, CA, CP)
ElectricalPotentiometer = Usage("sensors.ElectricalPotentiometer", 0x200027, CA, CP)
ElectricalFrequency = Usage("sensors.ElectricalFrequency", 0x200028, CA, CP)
ElectricalPeriod = Usage("sensors.ElectricalPeriod", 0x200029, CA, CP)
Environmental = Usage("sensors.Environmental", 0x200030, CA, CP)
EnvironmentalAtmosphericPressure = Usage("sensors.EnvironmentalAtmosphericPressure", 0x200031, CA, CP)
EnvironmentalHumidity = Usage("sensors.EnvironmentalHumidity", 0x200032, CA, CP)
EnvironmentalTemperature = Usage("sensors.EnvironmentalTemperature", 0x200033, CA, CP)
EnvironmentalWindDirection = Usage("sensors.EnvironmentalWindDirection", 0x200034, CA, CP)
EnvironmentalWindSpeed = Usage("sensors.EnvironmentalWindSpeed", 0x200035, CA, CP)
Light = Usage("sensors.Light", 0x200040, CA, CP)
LightAmbientLight = Usage("sensors.LightAmbientLight", 0x200041, CA, CP)
LightConsumerInfrared = Usage("sensors.LightConsumerInfrared", 0x200042, CA, CP)
Location = Usage("sensors.Location", 0x200050, CA, CP)
LocationBroadcast = Usage("sensors.LocationBroadcast", 0x200051, CA, CP)
LocationDeadReckoning = Usage("sensors.LocationDeadReckoning", 0x200052, CA, CP)
LocationGPS = Usage("sensors.LocationGPS", 0x200053, CA, CP)
LocationLookup = Usage("sensors.LocationLookup", 0x200054, CA, CP)
LocationOther = Usage("sensors.LocationOther", 0x200055, CA, CP)
LocationStatic = Usage("sensors.LocationStatic", 0x200056, CA, CP)
LocationTriangulation = Usage("sensors.LocationTriangulation", 0x200057, CA, CP)
Mechanical = Usage("sensors.Mechanical", 0x200060, CA, CP)
MechanicalBooleanSwitch = Usage("sensors.MechanicalBooleanSwitch", 0x200061, CA, CP)
MechanicalBooleanSwitchArray = Usage("sensors.MechanicalBooleanSwitchArray", 0x200062, CA, CP)
MechanicalMultivalueSwitch = Usage("sensors.MechanicalMultivalueSwitch", 0x200063, CA, CP)
MechanicalForce = Usage("sensors.MechanicalForce", 0x200064, CA, CP)
MechanicalPressure = Usage("sensors.MechanicalPressure", 0x200065, CA, CP)
MechanicalStrain = Usage("sensors.MechanicalStrain", 0x200066, CA, CP)
MechanicalWeight = Usage("sensors.MechanicalWeight", 0x200067, CA, CP)
MechanicalHapticVibrator = Usage("sensors.MechanicalHapticVibrator", 0x200068, CA, CP)
MechanicalHallEffectSwitch = Usage("sensors.MechanicalHallEffectSwitch", 0x200069, CA, CP)
Motion = Usage("sensors.Motion", 0x200070, CA, CP)
MotionAccelerometer1D = Usage("sensors.MotionAccelerometer1D", 0x200071, CA, CP)
MotionAccelerometer2D = Usage("sensors.MotionAccelerometer2D", 0x200072, CA, CP)
MotionAccelerometer3D = Usage("sensors.MotionAccelerometer3D", 0x200073, CA, CP)
MotionGyrometer1D = Usage("sensors.MotionGyrometer1D", 0x200074, CA, CP)
MotionGyrometer2D = Usage("sensors.MotionGyrometer2D", 0x200075, CA, CP)
MotionGyrometer3D = Usage("sensors.MotionGyrometer3D", 0x200076, CA, CP)
MotionMotionDetector = Usage("sensors.MotionMotionDetector", 0x200077, CA, CP)
MotionSpeedometer = Usage("sensors.MotionSpeedometer", 0x200078, CA, CP)
MotionAccelerometer = Usage("sensors.MotionAccelerometer", 0x200079, CA, CP)
MotionGyrometer = Usage("sensors.MotionGyrometer", 0x20007A, CA, CP)
Orientation = Usage("sensors.Orientation", 0x200080, CA, CP)
OrientationCompass1D = Usage("sensors.OrientationCompass1D", 0x200081, CA, CP)
OrientationCompass2D = Usage("sensors.OrientationCompass2D", 0x200082, CA, CP)
OrientationCompass3D = Usage("sensors.OrientationCompass3D", 0x200083, CA, CP)
OrientationInclinometer1D = Usage("sensors.OrientationInclinometer1D", 0x200084, CA, CP)
OrientationInclinometer2D = Usage("sensors.OrientationInclinometer2D", 0x200085, CA, CP)
OrientationInclinometer3D = Usage("sensors.OrientationInclinometer3D", 0x200086, CA, CP)
OrientationDistance1D = Usage("sensors.OrientationDistance1D", 0x200087, CA, CP)
OrientationDistance2D = Usage("sensors.OrientationDistance2D", 0x200088, CA, CP)
OrientationDistance3D = Usage("sensors.OrientationDistance3D", 0x200089, CA, CP)
OrientationDeviceOrientation = Usage("sensors.OrientationDeviceOrientation", 0x20008A, CA, CP)
OrientationCompass = Usage("sensors.OrientationCompass", 0x20008B, CA, CP)
OrientationInclinometer = Usage("sensors.OrientationInclinometer", 0x20008C, CA, CP)
OrientationDistance = Usage("sensors.OrientationDistance", 0x20008D, CA, CP)
Scanner = Usage("sensors.Scanner", 0x200090, CA, CP)
ScannerBarcode = Usage("sensors.ScannerBarcode", 0x200091, CA, CP)
ScannerRFID = Usage("sensors.ScannerRFID", 0x200092, CA, CP)
ScannerNFC = Usage("sensors.ScannerNFC", 0x200093, CA, CP)
Time = Usage("sensors.Time", 0x2000A0, CA, CP)
TimeAlarmTimer = Usage("sensors.TimeAlarmTimer", 0x2000A1, CA, CP)
TimeRealTimeClock = Usage("sensors.TimeRealTimeClock", 0x2000A2, CA, CP)
Other = Usage("sensors.Other", 0x2000E0, CA, CP)
OtherCustom = Usage("sensors.OtherCustom", 0x2000E1, CA, CP)
OtherGeneric = Usage("sensors.OtherGeneric", 0x2000E2, CA, CP)
OtherGenericEnumerator = Usage("sensors.OtherGenericEnumerator", 0x2000E3, CA, CP)

Event = Usage("sensors.Event", 0x200200)
EventSensorState = Usage("sensors.EventSensorState", 0x200201, NAry)
SensorStateUndefined = Usage("sensors.SensorStateUndefined", 0x200800, Sel)
SensorStateReady = Usage("sensors.SensorStateReady", 0x200801, Sel)
SensorStateNotAvailable = Usage("sensors.SensorStateNotAvailable", 0x200802, Sel)
SensorStateNoData = Usage("sensors.SensorStateNoData", 0x200803, Sel)
SensorStateInitializing = Usage("sensors.SensorStateInitializing", 0x200804, Sel)
SensorStateAccessDenied = Usage("sensors.SensorStateAccessDenied", 0x200805, Sel)
SensorStateError = Usage("sensors.SensorStateError", 0x200806, Sel)
EventSensorEvent = Usage("sensors.EventSensorEvent", 0x200202, NAry)
SensorEventUnknown = Usage("sensors.SensorEventUnknown", 0x200810, NAry)
SensorEventStateChanged = Usage("sensors.SensorEventStateChanged", 0x200811, NAry)
SensorEventPropertyChanged = Usage("sensors.SensorEventPropertyChanged", 0x200812, NAry)
SensorEventDataUpdated = Usage("sensors.SensorEventDataUpdated", 0x200813, NAry)
SensorEventPollResponse = Usage("sensors.SensorEventPollResponse", 0x200814, NAry)
SensorEventChangeSensitivity = Usage("sensors.SensorEventChangeSensitivity", 0x200815, NAry)
SensorEventRangeMaximumReached = Usage("sensors.SensorEventRangeMaximumReached", 0x200816, NAry)
SensorEventRangeMinimumReached = Usage("sensors.SensorEventRangeMinimumReached", 0x200817, NAry)
SensorEventHighThresholdCrossUpward = Usage("sensors.SensorEventHighThresholdCrossUpward", 0x200818, NAry)
SensorEventHighThresholdCrossDownward = Usage("sensors.SensorEventHighThresholdCrossDownward", 0x200819, NAry)
SensorEventLowThresholdCrossUpward = Usage("sensors.SensorEventLowThresholdCrossUpward", 0x20081A, NAry)
SensorEventLowThresholdCrossDownward = Usage("sensors.SensorEventLowThresholdCrossDownward", 0x20081B, NAry)
SensorEventZeroThresholdCrossUpward = Usage("sensors.SensorEventZeroThresholdCrossUpward", 0x20081C, NAry)
SensorEventZeroThresholdCrossDownward = Usage("sensors.SensorEventZeroThresholdCrossDownward", 0x20081D, NAry)
SensorEventPeriodExceeded = Usage("sensors.SensorEventPeriodExceeded", 0x20081E, NAry)
SensorEventFrequencyExceeded = Usage("sensors.SensorEventFrequencyExceeded", 0x20081F, NAry)
SensorEventComplexTrigger = Usage("sensors.SensorEventComplexTrigger", 0x200820, NAry)

Property = Usage("sensors.Property", 0x200300)
PropertyFriendlyName = Usage("sensors.PropertyFriendlyName", 0x200301, SV)
PropertyPersistentUniqueID = Usage("sensors.PropertyPersistentUniqueID", 0x200302, DV)
PropertySensorStatus = Usage("sensors.PropertySensorStatus", 0x200303, DV)
PropertyMinimumReportInterval = Usage("sensors.PropertyMinimumReportInterval", 0x200304, SV)
PropertySensorManufacturer = Usage("sensors.PropertySensorManufacturer", 0x200305, SV)
PropertySensorModel = Usage("sensors.PropertySensorModel", 0x200306, SV)
PropertySensorSerialNumber = Usage("sensors.PropertySensorSerialNumber", 0x200307, SV)
PropertySensorDescription = Usage("sensors.PropertySensorDescription", 0x200308, SV)
PropertySensorConnectionType = Usage("sensors.PropertySensorConnectionType", 0x200309, NAry)
ConnectionTypePCIntegrated = Usage("sensors.ConnectionTypePCIntegrated", 0x200830, Sel)
ConnectionTypePCAttached = Usage("sensors.ConnectionTypePCAttached", 0x200831, Sel)
ConnectionTypePCExternal = Usage("sensors.ConnectionTypePCExternal", 0x200832, Sel)
PropertySensorDevicePath = Usage("sensors.PropertySensorDevicePath", 0x20030A, DV)
PropertyHardwareRevision = Usage("sensors.PropertyHardwareRevision", 0x20030B, SV)
PropertyFirmwareVersion = Usage("sensors.PropertyFirmwareVersion", 0x20030C, SV)
PropertyReleaseDate = Usage("sensors.PropertyReleaseDate", 0x20030D, SV)
PropertyReportInterval = Usage("sensors.PropertyReportInterval", 0x20030E, DV)
PropertyChangeSensitivityAbsolute = Usage("sensors.PropertyChangeSensitivityAbsolute", 0x20030F, DV)
PropertyChangeSensitivityPercentofRange = Usage("sensors.PropertyChangeSensitivityPercentofRange", 0x200310, DV)
PropertyChangeSensitivityPercentRelative = Usage("sensors.PropertyChangeSensitivityPercentRelative", 0x200311, DV)
PropertyAccuracy = Usage("sensors.PropertyAccuracy", 0x200312, DV)
PropertyResolution = Usage("sensors.PropertyResolution", 0x200313, DV)
PropertyMaximum = Usage("sensors.PropertyMaximum", 0x200314, DV)
PropertyMinimum = Usage("sensors.PropertyMinimum", 0x200315, DV)
PropertyReportingState = Usage("sensors.PropertyReportingState", 0x200316, NAry)
ReportingStateReportNoEvents = Usage("sensors.ReportingStateReportNoEvents", 0x200840, Sel)
ReportingStateReportAllEvents = Usage("sensors.ReportingStateReportAllEvents", 0x200841, Sel)
ReportingStateReportThresholdEvents = Usage("sensors.ReportingStateReportThresholdEvents", 0x200842, Sel)
ReportingStateWakeOnNoEvents = Usage("sensors.ReportingStateWakeOnNoEvents", 0x200843, Sel)

ReportingStateWakeOnAllEvents = Usage("sensors.ReportingStateWakeOnAllEvents", 0x200844, Sel)
ReportingStateWakeOnThresholdEvents = Usage("sensors.ReportingStateWakeOnThresholdEvents", 0x200845, Sel)
PropertySamplingRate = Usage("sensors.PropertySamplingRate", 0x200317, DV)
PropertyResponseCurve = Usage("sensors.PropertyResponseCurve", 0x200318, DV)
PropertyPowerState = Usage("sensors.PropertyPowerState", 0x200319, NAry)
PowerStateUndefined = Usage("sensors.PowerStateUndefined", 0x200850, Sel)
PowerStateD0FullPower = Usage("sensors.PowerStateD0FullPower", 0x200851, Sel)
PowerStateD1LowPower = Usage("sensors.PowerStateD1LowPower", 0x200852, Sel)
PowerStateD2StandbyPowerwithWakeup = Usage("sensors.PowerStateD2StandbyPowerwithWakeup", 0x200853, Sel)
PowerStateD3SleepwithWakeup = Usage("sensors.PowerStateD3SleepwithWakeup", 0x200854, Sel)
PowerStateD4PowerOff = Usage("sensors.PowerStateD4PowerOff", 0x200855, Sel)

DataFieldLocation = Usage("sensors.DataFieldLocation", 0x200400, SV)
DataFieldLocationReserved = Usage("sensors.DataFieldLocationReserved", 0x200401)
DataFieldAltitudeAntennaSeaLevel = Usage("sensors.DataFieldAltitudeAntennaSeaLevel", 0x200402, SV)
DataFieldDifferentialReferenceStationID = Usage("sensors.DataFieldDifferentialReferenceStationID", 0x200403, SV)
DataFieldAltitudeEllipsoidError = Usage("sensors.DataFieldAltitudeEllipsoidError", 0x200404, SV)
DataFieldAltitudeEllipsoid = Usage("sensors.DataFieldAltitudeEllipsoid", 0x200405, SV)
DataFieldAltitudeSeaLevelError = Usage("sensors.DataFieldAltitudeSeaLevelError", 0x200406, SV)
DataFieldAltitudeSeaLevel = Usage("sensors.DataFieldAltitudeSeaLevel", 0x200407, SV)
DataFieldDifferentialGPSDataAge = Usage("sensors.DataFieldDifferentialGPSDataAge", 0x200408, SV)
DataFieldErrorRadius = Usage("sensors.DataFieldErrorRadius", 0x200409, SV)
DataFieldFixQuality = Usage("sensors.DataFieldFixQuality", 0x20040A, NAry)
FixQualityNoFix = Usage("sensors.FixQualityNoFix", 0x200870, Sel)
FixQualityGPS = Usage("sensors.FixQualityGPS", 0x200871, Sel)
FixQualityDGPS = Usage("sensors.FixQualityDGPS", 0x200872, Sel)
DataFieldFixType = Usage("sensors.DataFieldFixType", 0x20040B, NAry)
FixTypeNoFix = Usage("sensors.FixTypeNoFix", 0x200880, Sel)
FixTypeGPSSPSModeFixValid = Usage("sensors.FixTypeGPSSPSModeFixValid", 0x200881, Sel)
FixTypeDGPSSPSModeFixValid = Usage("sensors.FixTypeDGPSSPSModeFixValid", 0x200882, Sel)
FixTypeGPSPPSModeFixValid = Usage("sensors.FixTypeGPSPPSModeFixValid", 0x200883, Sel)
FixTypeRealTimeKinematic = Usage("sensors.FixTypeRealTimeKinematic", 0x200884, Sel)
FixTypeFloatRTK = Usage("sensors.FixTypeFloatRTK", 0x200885, Sel)
FixTypeEstimated = Usage("sensors.FixTypeEstimated", 0x200886, Sel)
FixTypeManualInputMode = Usage("sensors.FixTypeManualInputMode", 0x200887, Sel)
FixTypeSimulatorMode = Usage("sensors.FixTypeSimulatorMode", 0x200888, Sel)
DataFieldGeoidalSeparation = Usage("sensors.DataFieldGeoidalSeparation", 0x20040C, SV)
DataFieldGPSOperationMode = Usage("sensors.DataFieldGPSOperationMode", 0x20040D, NAry)
GPSOperationModeManual = Usage("sensors.GPSOperationModeManual", 0x200890, Sel)
GPSOperationModeAutomatic = Usage("sensors.GPSOperationModeAutomatic", 0x200891, Sel)
DataFieldGPSSelectionMode = Usage("sensors.DataFieldGPSSelectionMode", 0x20040E, SV)
GPSSelectionModeAutonomous = Usage("sensors.GPSSelectionModeAutonomous", 0x2008A0, Sel)
GPSSelectionModeDGPS = Usage("sensors.GPSSelectionModeDGPS", 0x2008A1, Sel)
GPSSelectionModeEstimated = Usage("sensors.GPSSelectionModeEstimated", 0x2008A2, Sel)
GPSSelectionModeManualInput = Usage("sensors.GPSSelectionModeManualInput", 0x2008A3, Sel)
